{
  "version": 3,
  "sources": [
    "Csdn.js",
    "http.js",
    "Codimd.js",
    "App.js",
    "index.js"
  ],
  "names": [
    "Option",
    "Select",
    "Csdn",
    "useState",
    "school",
    "setSchool",
    "email",
    "setEmail",
    "address",
    "setAddress",
    "submit",
    "url",
    "data",
    "fetch",
    "method",
    "headers",
    "body",
    "JSON",
    "stringify",
    "httpPost",
    "then",
    "response",
    "json",
    "msg",
    "message",
    "info",
    "catch",
    "err",
    "alert",
    "selectAfter",
    "defaultValue",
    "className",
    "onChange",
    "e",
    "value",
    "name",
    "initialValues",
    "remember",
    "onFinish",
    "values",
    "autoComplete",
    "Item",
    "label",
    "rules",
    "required",
    "addonAfter",
    "placeholder",
    "target",
    "type",
    "htmlType",
    "SmileTwoTone",
    "Step",
    "Steps",
    "Codimd",
    "UserSteps",
    "current",
    "title",
    "description",
    "placement",
    "arrowPointAtCenter",
    "onClick",
    "window",
    "open",
    "location",
    "href",
    "App",
    "csdnVisible",
    "setCsdnVisible",
    "setCurrent",
    "LeftMenu",
    "style",
    "width",
    "selectedKeys",
    "icon",
    "MailOutlined",
    "key",
    "AppstoreOutlined",
    "subTitle",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.1500f7d1.chunk.js",
  "sourcesContent": [
    "import { useState } from 'react';\nimport { Input, Select, Button, Form, Alert, message } from 'antd';\nimport { SmileTwoTone } from \"@ant-design/icons\";\nimport { httpPost } from './http';\nimport \"./App.css\";\nimport { responsiveArray } from 'antd/lib/_util/responsiveObserve';\n\nconst { Option } = Select;\n\nconst Csdn = () => {\n\tconst [school, setSchool] = useState('stu.pku.edu.cn');\n\tconst [email, setEmail] = useState('');\n\tconst [address, setAddress] = useState('');\n\n\n\n\n\tconst submit = () => {\n\t\tconst url = '/submit';\n\t\thttpPost(url, { address: address, email: email }).then((response) => {\n\t\t\treturn response.json();\n\t\t}).then((data) => {\n\t\t\tconst { msg } = data;\n\t\t\tmessage.info(msg);\n\t\t}).catch(function (err) {\n\t\t\talert(err);\n\t\t});\n\t}\n\n\tconst onFinish = (values) => {\n\t\tsubmit();\n\t}\n\n\tconst selectAfter = (\n\t\t<Select defaultValue=\"stu.pku.edu.cn\" className=\"select-after\" onChange={(e) => { setSchool(e) }}>\n\t\t\t<Option value=\"stu.pku.edu.cn\">stu.pku.edu.cn</Option>\n\t\t\t<Option value=\"thu.edu.cn\">thu.edu.cn</Option>\n\t\t\t<Option value=\"ruc.edu.cn\">ruc.edu.cn</Option>\n\t\t</Select>\n\t);\n\n\treturn (\n\t\t<div className='csdn'>\n\t\t\t<Form\n\t\t\t\tname=\"basic\"\n\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\tonFinish={onFinish}\n\t\t\t\tautoComplete=\"off\"\n\t\t\t>\n\t\t\t\t<Form.Item\n\t\t\t\t\tlabel=\"邮箱地址\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\trules={[{ required: true, message: '请输入您的邮箱！（仅限北大、清华、人大邮箱后缀）' }]}\n\t\t\t\t>\n\t\t\t\t\t<Input addonAfter={selectAfter} placeholder='请输入您的邮箱（仅限北大、清华、人大邮箱后缀）' onChange={(e) => {\n\t\t\t\t\t\tsetEmail(e.target.value + school);\n\t\t\t\t\t}} />\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item\n\t\t\t\t\tlabel=\"csdn文件地址\"\n\t\t\t\t\tname=\"csdn\"\n\t\t\t\t\trules={[{ required: true, message: '请输入您要下载的csdn文件地址！' }]}\n\t\t\t\t>\n\t\t\t\t\t<Input placeholder='请输入您要下载的csdn文件地址' onChange={(e) => {\n\t\t\t\t\t\tsetAddress(e.target.value);\n\t\t\t\t\t}} />\n\t\t\t\t</Form.Item>\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t<SmileTwoTone />\n\t\t\t\t\t\t提交\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t</div>\n\t);\n}\n\nexport default Csdn;",
    "// 封装get请求\nexport const httpGet = (url) => {\n    var result = fetch(url)\n    return result\n}\n// 封装post请求\nexport const httpPost = (url, data) => {\n    var result = fetch(url, {\n        method: 'post',\n        headers: {\n            'Accept': 'application/json,text/plain,*/*',/* 格式限制：json、文本、其他格式 */\n            'Content-Type': 'application/json'/* 请求内容类型 */\n        },\n        //data表单数据，body最终要的格式为username=tony&pwd=123456，所以需要格式化\n        body: JSON.stringify(data)\n    })\n    return result\n}\n//格式化data\nconst paramsPostBody = (obj) => {\n    var result = '';//接受最后结果\n    var item;\n    for (item in obj) {\n        result += '&' + item + '=' + encodeURIComponent(obj[item])\n    }\n    if (result) {\n        result = result.slice(1)//去掉第一个&\n    }\n    return result\n}",
    "import { Steps, Tooltip, Button } from \"antd\";\nimport { SmileTwoTone} from \"@ant-design/icons\";\nimport \"./App.css\";\n\nconst { Step } = Steps;\n\nconst Codimd = () => {\n\tconst handleClick = () => {\n\t\tconst w=window.open('_black');\n\t\tconst url='http://39.103.166.167:3000/';\n\t\tw.location.href=url;\n\t}\n\n\tconst UserSteps = () => {\n\t\treturn (\n\t\t\t<Steps current={0} className='codimd-steps'>\n\t\t\t\t<Step title=\"填写信息\" />\n\t\t\t\t<Step title=\"点击注册\" description=\"注册按钮默认为灰色（待改）\" />\n\t\t\t\t<Step title=\"完成注册\" />\n\t\t\t</Steps>);\n\t}\n\n\treturn (\n\t\t<div className='codimd'>\n\t\t\t<UserSteps />\n\t\t\t<Tooltip placement=\"topLeft\" title=\"请注意注册按钮默认就为灰色的（待改），填好信息后点击注册即可完成注册。\" arrowPointAtCenter>\n\t\t\t\t<Button onClick={handleClick} className='codimd-btn'><SmileTwoTone />点击体验 / codimd(轻量级的在线文档协作工具)。</Button>\n\t\t\t</Tooltip>\n\t\t</div>\n\t)\n};\n\nexport default Codimd;",
    "import { PageHeader, Menu } from \"antd\";\nimport { useState } from \"react\";\nimport { AppstoreOutlined, MailOutlined } from \"@ant-design/icons\";\nimport Csdn from './Csdn';\nimport Codimd from './Codimd';\nimport \"./App.css\";\n\n\nconst App = () => {\n\n\tconst [csdnVisible, setCsdnVisible] = useState(true);\n\tconst [current, setCurrent] = useState(\"1\");\n\n\t\n\n\tconst LeftMenu = () => {\n\t\treturn (\n\t\t\t<Menu style={{ width: 300 }} selectedKeys={[current]}>\n\t\t\t\t<Menu.Item\n\t\t\t\t\tkey=\"1\"\n\t\t\t\t\ticon={<MailOutlined />}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tsetCsdnVisible(true);\n\t\t\t\t\t\tsetCurrent(e.key);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tcsdn free download(csdn文件下载)\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item\n\t\t\t\t\tkey=\"2\"\n\t\t\t\t\ticon={<AppstoreOutlined />}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tsetCsdnVisible(false);\n\t\t\t\t\t\tsetCurrent(e.key);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tcodimd(轻量级的在线文档协作工具)\n\t\t\t\t</Menu.Item>\n\t\t\t</Menu>\n\t\t);\n\t};\n\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<PageHeader\n\t\t\t\tclassName=\"site-page-header\"\n\t\t\t\ttitle=\"Welcome!\"\n\t\t\t\tsubTitle=\"By Yjx\"\n\t\t\t/>\n\t\t\t<div className=\"main-wrapper\">\n\t\t\t\t<LeftMenu />\n\t\t\t\t{csdnVisible?<Csdn />:<Codimd />}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router>\n\t\t\t<App />\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"
  ],
  "sourceRoot": ""
}